{
	"botName": "DirectoryBot",
	"description": "DirectoryBot is a configurable Discord bot that stores friend codes and converts time zones.",
	"expiredMessage": "This message has expired.",
	"errorNotManager": "You need a role with the administrator flag${state.managerRoleID ? ` or the @${receivedMessage.guild.roles.resolve(cachedGuild.managerRoleID).name} role` : ``} to use the **${command}** command.",
	"errorBadCommand": "${command} isn't a ${bot nickname} command. Please check for typos or use ${bot nickname}` help`.",
	"errorTooManyCommands": "To prevent excessive messaging, users are unable to enter more than ${anti-spam count} commands in {anti-spam duration}. You can use ${bot nickname}` lookup (platform)` to look up everyone's information for the given platform at once.",
	"platformsList": "This server's tracked platforms are:",
	"lessThanAnHour": "less than an hour",
	"minutes": "minute(s)",
	"andSeconds": "and ${seconds} seconds",
	"possessivePronoun": "possessivepronoun",
	"setting": "setting",
	"pronounDescription": "The user's possessive pronoun, for use in bot messaging.",
	"timeZone": "timezone",
	"default": "default",
	"timeZoneDescription": "The user's time zone, for use in time conversions.",
	"stream": "stream",
	"username": "username",
	"streamDescription": "The user's stream username. Currently supported: Twitch",
	"blockSummary": "Prevents a user from looking up your data",
	"blockDetailed": "This command prevents the mentioned user from accessing your data. Unblock a user by using it on the user again.",
	"blockHeader1": "Block a user",
	"blockSection1": "${bot nickname}` block (user)`",
	"blockSuccess": "You have blocked ${blocked person} from ${server}. They won't be able to look up your information.",
	"unblockSuccess": "You have unblocked ${unblocked person} from ${server}.",
	"blockErrorNoMention": "Please mention a user to block.",
	"convertSummary": "Convert a time to someone else's time zone or a given time zone",
	"convertDetailed": "This command calculates a time for a given user or time zone. DirectoryBot uses [tz database format](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for time zones.",
	"convertHeader1": "Convert a time to a user's time zone",
	"convertSection1": "${bot nickname}` convert (time) in (start time zone) for (user)`",
	"convertHeader2": "Convert a time to a specified time zone",
	"convertSection2": "${bot nickname}` convert (time) in (start time zone) to (result time zone)`",
	"convertHeader3": "\u200B",
	"convertSection3": "\"If the starting timezone is omitted, the conversion will be attempted with the time zone you've recorded for the \"timezone\" platform.\"",
	"convertErrorUserZoneMissiong": "Your time could not be converted to ${targetGuildMember}'s time zone. ${targetGuildMember} does not have a time zone recorded.",
	"convertErrorNotAMember": "Your time could not be converted to ${targetGuildMember}'s time zone. ${targetGuildMember} isn't a member of ${server}.",
	"convertErrorNoPlatform": "Your time could not be converted. {server} does not seem to be tracking time zones.",
	"convertSuccessUser": "*${original time}in ${original time zone}* is **${destination time} for {targetGuildMember}**.",
	"convertSuccessZone": "*${original time}in ${original time zone}* is **${destination time} in {destination time zone}**.",
	"convertErrorTimeDidNotParse": "The time you provided could not be parsed (remember to specify AM or PM).",
	"convertErrorBadResultZone": "Please use the IANA timezone format for the **result timezone**. You can look up timezones here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",
	"convertErrorNoResultZone": "Please specify a result timezone for your `convert` command.",
	"convertErrorBadStartZone": "Please use the IANA timezone format for the **starting timezone**. You can look up timezones here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",
	"countdownSummary": "How long until the given time",
	"countdownDetailed": "This command calculates the amount of time until a given time. DirectoryBot uses tz database format for time zones.",
	"countdownHeader1": "Count down to a time",
	"countdownSection1": "${bot nickname}` countdown (time) in (time zone)`\nIf the time zone is omitted, the countdown will be attempted with the time zone you've recorded for the \"timezone\" platform, then the server's local time zone failing that.",
	"countdownSuccess": "{original time} in {original time zone} is about {amount of time} from now.",
	"countdownErrorBadZone": "The time zone you entered could not be parsed. Remember to use the tz database format for time zones: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",
	"countdownErrorBadTime": "The time you provided could not be parsed (remember to specify AM or PM).",
	"creditsSummary": "Version info and contributors (using `help` on this command uses the command)",
	"studioName": "Imaginary Horizons Productions",
	"creditsTitle": "DirectoryBot Credits",
	"version": "Version",
	"designAndEngineering": "Design & Engineering",
	"engineering": "Engineering",
	"art": "Art",
	"localization": "Localization",
	"patronsDescription": "__**Patrons**__\nImaginary Horizons Productions is supported on Patreon by generous users like you, credited below.",
	"observerTier": "Observer Tier",
	"dreamerTier": "Dreamer Tier",
	"explorerTier": "Explorer Tier",
	"cartographerTier": "Cartographer Tier",
	"archivistTier": "Archivist Tier",
	"grandArchivistTier": "Grand Archivist Tier",
	"datalifetimeSummary": "Sets the lifetime (in hours) for expiring messages",
	"datalifetimeDetailed": "This command sets the number of hours before responses from the `lookup` and `send` commands expire (decimals allowed).",
	"datalifetimeHeader1": "Set the data lifetime",
	"datalifetimeSection1": "`@DirectoryBot datalifetime (number of hours)`",
	"datalifetimeSuccess": "The expiring message lifetime has been set to {mentionedNumber} hour(s).",
	"datalifetimeErrorBadNumber": "The number for your `{command alias used}` command could not be parsed.",
	"deleteSummary": "Remove your information for a platform",
	"deleteNotice": "Your {platform} {platform term} has been removed from {server} because {reason}.",
	"deleteDetailed": "This command removes your data for the given platform. Bot managers can use this command to remove information for other users.",
	"deleteHeader1": "Delete your data",
	"deleteSection1": "`@DirectoryBot delete (platform)`",
	"deleteHeader2": "Delete another user's data",
	"deleteSection2": "`@DirectoryBot delete (user) (platform)`",
	"deleteSuccessOther": "You have removed {target}'s {platform} {platform term} from {server}.",
	"deleteErrorNoDataOther": "{target} does not have a {platform} {platform term} recorded in {server}.",
	"deleteErrorNotManager": "You need a role with administrator privileges or the role @{manager role name} to remove {platform term}s for others.",
	"deleteErrorBadMember": "That person isn't a member of {server}.",
	"deleteSuccessSelf": "You have removed your {platform} {platform term} from {server}.",
	"deleteErrorNoDataSelf": "You do not currently have a {platform} {term} recorded in {server}.",
	"deleteErrorBadPlatform": "{platform} is not currently being tracked in {server}.",
	"deleteErrorNoPlatform": "Please provide the platform of the information to delete.",
	"helpSummary": "You can type `@DirectoryBot help` followed by one of those for specific instructions",
	"helpDetailed": "This command provides details on DirectoryBot commands by either listing all commands available to you, or providing details on a specific command.",
	"helpHeader1": "List all commands",
	"helpSection1": "`@DirectoryBot help`",
	"helpHeader2": "Get details on a specific command",
	"helpSection2": "`@DirectoryBot help (command)`",
	"helpErrorNotManager": "You need a role with administrator privileges or the role @{manager role name} to remove {platform term}s for others.",
	"commandSetGeneral": "General Commands",
	"commandSetTimeZone": "Time Zone Commands",
	"commandSetStream": "Stream Commands",
	"commandSetConfiguration": "Configuration Commands",
	"commandSetGeneralDescription": "To interact with {bot nickname}, mention the bot then type one of these commands:",
	"commandSetTimeZoneDescription": "\"The time module contains commands for converting time zones, which users can store in the default platform \"timezone\".\"",
	"commandSetStreamDescription": "The streaming module contains commands for supporting live-streamers.",
	"commandSetConfigurationDescription": "The following commands can only be used by server members who have Discord administrator privledges or the role determined by `setmanagerrole`.",
	"supportFooter": "\"Support development with \"@DirectoryBot support\"",
	"importSummary": "Copies your information from a source server to a destination server",
	"importDetailed": "This command copies your data for matching platforms from a given server.",
	"importHeader1": "Importing data",
	"importSection1": "\"`@DirectoryBot import (channel mention or snowflake from source server)`\\nThere are two ways to indicate which server to import from: by mentioning a channel from that server, or by providing the server's snowflake.\\n\\nTo get a channel mention, start a message in the server you want to import from. Start with #, then autocomplete. You can then copy-paste the blue link into your command in the destination server.\\n\\nTo get a server's snowflake, first activate Developer Mode in your User Settings. Then you can right-click on the source server and select \"Copy ID\" from the drop-down menu.",
	"importSuccess": "Your import succeeded. Here are the platforms that have been updated:",
	"importEntry": "{platform}: {entry}",
	"importErrorNoSourceData": "You do not seem to have any information recorded in the source server.",
	"importErrorNoSourceBot": "Source server for import does not seem to be running {bot nickname}.",
	"importErrorSameGuild": "Source server for import cannot be the same as the destination server.",
	"importErrorBadSource": "Source server for import could not be parsed.",
	"lookupSummary": "Look up information for a platform",
	"lookupDetailed": "This command messages you the entries a given platform. You can limit your results to a set of users by mentioning them at the end of the command.",
	"lookupHeader1": "Look up a platform",
	"lookupSection1": "`@DirectoryBot lookup (platform)`",
	"lookupHeader2": "Filter for users",
	"lookupSection2": "`@DirectoryBot lookup (platform) (users)`",
	"lookupExpirationWarning": "This message will expire in about {lifetime}.",
	"lookupExpired": "Your lookup of {server}'s {platform} {platform term}s has expired.",
	"lookupErrorBadPlatform": "{platform} is not currently being tracked in {server}.",
	"lookupErrorNoPlatform": "Please provide a platform in which to look up information.",
	"managerroleSummary": "Sets the bot manager role which allows the use of manager commands",
	"managerroleDetailed": "This command sets the manager role, which allows users to use manager-only commands without server administrator privilege. If no role is given, the set role will be cleared.",
	"managerroleHeader1": "Set a role",
	"managerroleSection1": "`@DirectoryBot setmanagerrole (role)`",
	"managerroleHeader2": "Clear manager role",
	"managerroleSection2": "`@DirectoryBot setmanagerrole`",
	"managerroleSuccess": "The {bot nickname} manager role has been set to @{role name}.",
	"managerroleClear": "The {bot nickname} manager role has been cleared.",
	"multistreamSummary": "Generate a multistream link for the given users",
	"multistreamDetailed": "This command generates a link to watch multiple streams simultaneously. Optionally, you can enter the layout number last if you want to specify that.",
	"multistreamHeader1": "Generate multistream link",
	"multistreamSection1": "`@DirectoryBot multistream (users) (layout)`",
	"multistreamSuccess": "Here's the multistream link: {url}",
	"multistreamErrorMissingUsers": "The following users don't have stream info recorded: {missing users}.",
	"multistreamErrorNotEnoughUsers": "Please mention at least two users to generate a multistream link for.",
	"multistreamErrorNoPlatform": "Your multistream command could not be completed. {server} does not seem to be tracking stream information.",
	"mydataSummary": "Lists all your platform entries",
	"mydataDetailed": "This command sends you a private message with all the information you've recorded.",
	"mydataHeader1": "Usage",
	"mydataSection1": "`@DirectoryBot mydata`",
	"yourData": "Your Data",
	"mydataErrorOverflow": "Your `${command alias used}` message is too long to fit in a single Discord message. Please try the `lookup` command instead.",
	"newplatformSummary": "Setup a new game/service for users to record or retrieve information for",
	"newplatformDetailed": "This command sets up a new game/service for users to record and retrieve information.",
	"newplatformHeader1": "Create a new platform",
	"newplatformSection1": "\"`@DirectoryBot newplatform (platform name) (information term) (description)`\\nOptionally, you can set a term to call the information that is being stored (default is \"username\"). Additionally, you can set an optional description to be displayed when the lookup command is used on the platform.\"",
	"newplatformSuccess": "{platform} {term}s can now be recorded and retrieved.",
	"newplatformErrorDupePlatform": "{server} already has a platform named {platform}.",
	"newplatformErrorNoUserNamedPlatforms": "Please select a platform name that is not a user mention.",
	"newplatformErrorNoName": "Please provide a name for the new platform.",
	"permissionsroleSummary": "Sets the bot permissions role; not mentioning a role clears the setting",
	"permissionsroleDetailed": "This command updates the permissions role. This allows DirectoryBot to interpret accidental mentions of that role as command messages.",
	"permissionsroleHeader1": "Set the permissions role",
	"permissionsroleSection1": "`@DirectoryBot permissionsrole (role)`",
	"permissionsroleHeader2": "Clear the permissions role",
	"permissionsroleSection2": "`@DirectoryBot permissionsrole`",
	"permissionsroleSuccess": "The {bot nickname} permissions role has been stored as @{role name}.",
	"permissionsroleClear": "The {bot nickname} permissions role has been cleared.",
	"platformsSummary": "List the games/services DirectoryBot can be used to record or retrieve information for (using help on this command uses the command)",
	"platformsDetailed": "This command lists the games/services DirectoryBot can be used to record or retrieve information for. Using \\`help\\` on this command uses the command.",
	"platformsHeader1": "Usage",
	"platformsSection1": "`@DirectoryBot platforms`",
	"recordSummary": "Record your information for a platform",
	"recordDetailed": "This command adds your information for given platform so people can ask the bot for it.",
	"recordHeader1": "Recording data",
	"recordSection1": "`@DirectoryBot record (platform) (data)`\nThe message containing the command will be deleted for security purposes. Discord's spoilers markdown (|| on both sides) is removed from code entry to allow hiding entry from mobile via spoilers markdown.",
	"recordSuccess": "{message author} has recorded a {platform} {term}. Check it with:\n\t{bot nickname}` lookup `{author mention}` {platform}`.",
	"recordErrorBadPlatform": "{platform} is not currently being tracked in {server}.",
	"recordErrorNoData": "Please provide the information you would like to record.",
	"recordErrorNoPlatform": "Please provide a platform for which to record your information for.",
	"removeplatformSummary": "Stop recording and distributing user information for a game/service",
	"removeplatformDetailed": "This command removes a platform from DirectoryBot's list of platforms for the server.",
	"removeplatformHeader1": "Remove a platform",
	"removeplatformSection1": "`@DirectoryBot removeplatform (platform)`",
	"removeplatformSuccess": "{platform} information will no longer be recorded.",
	"removeplatformErrorBadPlatform": "{platform} is not currently being recorded in {server}.",
	"removepaltformErrorNoPlatform": "Please provide a platform to remove.",
	"setlocaleSummary": "",
	"setlocaleDetailed": "",
	"setlocaleHeader1": "",
	"setlocaleSection1": "",
	"setlocaleSuccess": "",
	"setlocaleErrorBadLocale": "",
	"setlocaleErrorNoLocale": "",
	"setplatformroleSummary": "Automatically give a role to users who record information for a platform",
	"setplatformroleDetailed": "This command associates the given role and platform. Anyone who records information for that platform will be automatically given the associated role. Using the command without mentioning a role clears the set role for the platform.",
	"setplatformroleHeader1": "Set a platform role",
	"setplatformroleSection1": "`@DirectoryBot setplatformrole (platform) (role)`",
	"setplatformroleHeader2": "Clear a platform role",
	"setplatformroleSection2": "`@DirectoryBot setplatformrole (platform)`",
	"setplatformroleSuccess": "Server members who set a {platform} {term} will now automatically be given the role @{role name}.",
	"setplatformroleClear": "The {platform} role in {server} has been cleared.",
	"setplatformroleErrorBadPlatform": "{server} doesn't have a platform named {platform}.",
	"setplatformroleErrorNoPlatform": "Please provide a platform to set a role for.",
	"setplatformtermSummary": "Changes what DirectoryBot calls information for the given platform",
	"setplatformtermDetailed": "\"This command changes what DirectoryBot calls data for the given platform (default is \"username\").\"",
	"setplatformtermHeader1": "Change a platform's data term",
	"setplatformtermSection1": "`@DirectoryBot setplatformterm (platform) (data term)`",
	"setplatformtermSuccess": "Information for {platform} will now be referred to as {term} in {server}.",
	"setplatformtermErrorBadPlatform": "{platform} is not currently being recorded in {server}.",
	"setplatformtermErrorNoTerm": "Please provide a term to change to for the platform.",
	"setplatformtermErrorNoPlatform": "Please provide a platform for which to change the term.",
	"shoutoutSummary": "Have DirectoryBot post someone's stream information",
	"shoutoutDetailed": "This command posts the given user's stream information.",
	"shoutoutHeader1": "Give a stream shoutout",
	"shoutoutSection1": "`@DirectoryBot shoutout (user)`",
	"shoutoutSuccess": "Check out {user}'s stream at {url} !",
	"shoutoutErrorNoData": "{user} has not set a stream username in this server's DirectoryBot yet.",
	"shoutoutErrorBadUser": "That person isn't a member of {server}.",
	"shoutoutErrorNoPlatform": "Your `shoutout` command could not be completed. {server} does not seem to be tracking stream information.",
	"supportSummary": "Lists the ways to support development of DirectoryBot",
	"supportDetailed": "This command lists easy ways to support DirectoryBot development. Using `help` on this command uses the command.",
	"supportHeader1": "Usage",
	"supportSection1": "`@DirectoryBot support`",
	"supportEmbedTitle": "Supporting DirectoryBot",
	"supportEmbedDescription": "Thank you for using DirectoryBot! Here are some ways to support development:",
	"supportEmbedHeader1": "Vote for us on top.gg",
	"supportEmbedSection1": "top.gg is a Discord bot listing and distrabution service. Voting for DirectoryBot causes it to appear earlier in searches. [DirectoryBot's Page](https://top.gg/bot/585336216262803456)",
	"supportEmbedHeader2": "Refer a friend",
	"supportEmbedSection2": "Got a friend interested in adding DirectoryBot to their server? Pass them [this link](https://discord.com/oauth2/authorize?client_id=585336216262803456&permissions=268446720&scope=bot)!",
	"supportEmbedHeader3": "Contribute code or localization support",
	"supportEmbedSection3": "Check out our [GitHub](https://github.com/Imaginary-Horizons-Productions/DirectoryBot) and tackle some issues!",
	"supportEmbedHeader4": "Create some social media buzz",
	"supportEmbedSection4": "Use the #ImaginaryHorizonsProductions hashtag!",
	"supportEmbedHeader5": "Become a Patron",
	"supportEmbedSection5": "Chip in for server costs at the [Imaginary Horizons Productions Patreon](https://www.patreon.com/imaginaryhorizonsproductions)!",
	"thanksInAdvanced": "Thanks in advanced!",
	"tellSummary": "Have DirectoryBot send someone your information",
	"tellDetailed": "This command sends your information on the given platform to the given user.",
	"tellHeader1": "Tell someone your data",
	"tellSection1": "`@DirectoryBot tell (platform) (user)`",
	"tellSent": "{author} from {server} has sent you {attempt to use stored possessive pronoun, default to 'their'} {platform} {term}. It is:\n\t{data}\n\nThis message will expire in about {lifetime}.",
	"tellExpired": ", but it has expired. You can look it up again with {bot nickname}` lookup `{sender}` {platform}`.",
	"tellSuccess": "Your {platform} {term} has been sent to {recipient}.",
	"tellErrorNoData": "You have not recorded a {platform} {term} in {server}.",
	"tellErrorBadPlatform": "{platform} is not currently being tracked in {server}.",
	"tellErrorNoPlatform": "Please provide the platform of the information to send.",
	"tellErrorNoUser": "Please mention someone in {server} to send your information to.",
	"whoisSummary": "Ask DirectoryBot who a certain username belongs to",
	"whoisDetailed": "This command checks if anyone uses the given username and private messages you the result.",
	"whoisHeader1": "Look up a username",
	"whoisSection1": "`@DirectoryBot whois (username)`",
	"whoisSuccess": "The following people have recorded {username} in {server}:",
	"whoisEntry": "\n{username} for {platform}",
	"whoisErrorNoUsername": "Please specify a username to check for."
}